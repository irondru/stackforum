
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /home/amd/ruby_projects/stackforum/back/log/development.searchd.log
  query_log = /home/amd/ruby_projects/stackforum/back/log/development.searchd.query.log
  pid_file = /home/amd/ruby_projects/stackforum/back/log/development.sphinx.pid
  workers = threads
  binlog_path = /home/amd/ruby_projects/stackforum/back/tmp/binlog/development
}

index answer_core
{
  type = rt
  path = /home/amd/ruby_projects/stackforum/back/db/sphinx/development/answer_core
  docinfo = extern
  rt_field = sphinx_internal_class_name
  rt_field = body
  rt_field = author
  rt_attr_uint = sphinx_deleted
  rt_attr_bigint = sphinx_internal_id
  rt_attr_timestamp = created_at
  rt_attr_timestamp = updated_at
  rt_attr_string = sphinx_internal_class
  rt_attr_string = author_sort
}

index comment_core
{
  type = rt
  path = /home/amd/ruby_projects/stackforum/back/db/sphinx/development/comment_core
  docinfo = extern
  rt_field = sphinx_internal_class_name
  rt_field = body
  rt_field = author
  rt_attr_uint = sphinx_deleted
  rt_attr_bigint = sphinx_internal_id
  rt_attr_timestamp = created_at
  rt_attr_timestamp = updated_at
  rt_attr_string = sphinx_internal_class
  rt_attr_string = author_sort
}

index question_core
{
  type = rt
  path = /home/amd/ruby_projects/stackforum/back/db/sphinx/development/question_core
  docinfo = extern
  rt_field = sphinx_internal_class_name
  rt_field = title
  rt_field = body
  rt_field = author
  rt_attr_uint = sphinx_deleted
  rt_attr_bigint = sphinx_internal_id
  rt_attr_timestamp = created_at
  rt_attr_timestamp = updated_at
  rt_attr_string = sphinx_internal_class
  rt_attr_string = title_sort
}

source user_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = stackforum
  sql_pass = qwerty123
  sql_db = stackforum_dev
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "users"."id" * 8 + 3 AS "id", "users"."email" AS "email", "users"."id" AS "sphinx_internal_id", 'User' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "users"."created_at")::int AS "created_at", extract(epoch from "users"."updated_at")::int AS "updated_at" FROM "users" WHERE ("users"."id" BETWEEN $start AND $end) GROUP BY "users"."id", "users"."email", "users"."id", "users"."created_at", "users"."updated_at"
  sql_query_range = SELECT COALESCE(MIN("users"."id"), 1), COALESCE(MAX("users"."id"), 1) FROM "users"
  sql_attr_uint = sphinx_deleted
  sql_attr_bigint = sphinx_internal_id
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = email
}

index user_core
{
  type = plain
  path = /home/amd/ruby_projects/stackforum/back/db/sphinx/development/user_core
  docinfo = extern
  source = user_core_0
}

index answer
{
  type = distributed
  local = answer_core
}

index comment
{
  type = distributed
  local = comment_core
}

index question
{
  type = distributed
  local = question_core
}

index user
{
  type = distributed
  local = user_core
}
